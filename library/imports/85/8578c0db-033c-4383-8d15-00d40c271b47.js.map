{"version":3,"sources":["../../../../../assets/src/room/assets/src/room/Player.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../assets/src/room","sourcesContent":["import { DIRECTION, PLAYER_ROLE, PLAYER_STATE } from \"../Constants\";\nimport { RoomScene } from \"./RoomScene\";\nimport { Board } from \"./Board\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport class Player extends cc.Component {\n\n    @property(cc.Float)\n    private speed: number = 200;\n    @property(cc.Animation)\n    private animation: cc.Animation = null;\n\n    private dir = DIRECTION.IDLE;\n    private collisionX: number;\n    private collisionY: number;\n    private touchingNumber: number;\n    public isAddSpeed: boolean;\n    public isAddArmor: boolean;\n    public isFreeze: boolean;\n    public role: PLAYER_ROLE;\n    private moveActions: Array<DIRECTION>;\n    private board: Board;\n    private oriPos: cc.Vec2;\n    private state: PLAYER_STATE;\n    private lastSkillTime: number = 0;\n\n    protected onLoad() {\n        this.oriPos = this.node.position;\n    }\n\n    public resetPos() {\n        this.node.position = this.oriPos;\n    }\n\n    public init(role: PLAYER_ROLE, board: Board) {\n        this.collisionX = 0;//x轴是否碰撞，0：没有碰撞，-1：左方有碰撞，1：右方有碰撞\n        this.collisionY = 0;\n        this.touchingNumber = 0;//同时碰撞物体的个数\n        this.isAddSpeed = false;\n        this.isAddArmor = false;\n        this.isFreeze = false;\n        this.role = role;\n        this.state = PLAYER_STATE.NONE;\n        this.moveActions = [];\n        this.board = board;\n    }\n\n    public active(role: PLAYER_ROLE) {\n        this.role = role;\n        this.state = PLAYER_STATE.NORMAL;\n        this.resetPos();\n    }\n\n    public pause() {\n        this.state = PLAYER_STATE.NONE;\n    }\n\n    public resume() {\n        this.state = PLAYER_STATE.NORMAL;\n        this.resetPos();\n    }\n\n    public useSkill() {\n        if (this.state === PLAYER_STATE.NONE) return;\n        let skillTime = new Date().getTime();\n        if (skillTime - this.lastSkillTime > 1000) {\n            if (this.role === PLAYER_ROLE.ATTACK) {\n                this.addSpeed();\n            } else {\n                this.addArmor();\n            }\n            this.lastSkillTime = skillTime;\n        }\n    }\n\n    private addSpeed() {\n        this.isAddSpeed = true;\n        this.node.getChildByName('dialog').getChildByName('label').getComponent(cc.Label).string = '抱';\n        this.node.getChildByName('dialog').active = true;\n        setTimeout(() => {\n            this.isAddSpeed = false;\n        }, 100);\n        setTimeout(() => {\n            this.node.getChildByName('dialog').active = false;\n        }, 500);\n    }\n\n    private addArmor() {\n        if (this.isFreeze) return;\n        this.isAddArmor = true;\n        this.node.getChildByName('skill').active = true;\n        this.dir = DIRECTION.IDLE;\n        this.node.getChildByName('dialog').getChildByName('label').getComponent(cc.Label).string = '滚';\n        this.node.getChildByName('dialog').active = true;\n        setTimeout(() => {\n            this.isAddArmor = false;\n            this.node.getChildByName('skill').active = false;\n            this.updateDir();\n            this.node.getChildByName('dialog').active = false;\n        }, 500);\n    }\n\n    public freeze() {\n        this.isFreeze = true;\n        this.node.getChildByName('freeze').active = true;\n        this.dir = DIRECTION.IDLE;\n        setTimeout(() => {\n            this.isFreeze = false;\n            this.node.getChildByName('freeze').active = false;\n            this.updateDir();\n        }, 2000);\n    }\n\n    public rebound(dir: DIRECTION) {\n        this.dir = dir;\n        this.isAddSpeed = true;\n        setTimeout(() => {\n            this.isAddSpeed = false;\n        }, 100);\n    }\n\n    public move(dir: DIRECTION) {\n        if (dir === this.dir) {\n            return;\n        }\n        this.moveActions.push(dir);\n        this.updateDir();\n        \n    }\n\n    private updateDir() {\n        let moveAction;\n        if (this.moveActions.length > 0) {\n            moveAction = this.moveActions[this.moveActions.length - 1];\n        } else {\n            moveAction = DIRECTION.IDLE;\n        }\n        this.dir = moveAction;\n        switch(this.dir) {\n            case DIRECTION.LEFT:\n                this.animation.play('move_left');\n                break;\n            case DIRECTION.RIGHT:\n                this.animation.play('move_right');\n                break;\n            case DIRECTION.UP:\n                this.animation.play('move_up');\n                break;\n            case DIRECTION.DOWN:\n                this.animation.play('move_down');\n                break;\n        }\n    }\n\n    public tryStop(dir) {\n        let i = this.moveActions.indexOf(dir);\n        this.moveActions.splice(i);\n        if (this.dir === dir) {\n            this.updateDir();\n        }\n    }\n\n    onCollisionEnter(other, self) {\n        // this.node.color = cc.Color.RED;\n        this.touchingNumber++;\n        // 1st step \n        // get pre aabb, go back before collision\n        let otherAabb = other.world.aabb;\n        let otherPreAabb = other.world.preAabb.clone();\n\n        let selfAabb = self.world.aabb;\n        let selfPreAabb = self.world.preAabb.clone();\n\n        // 2nd step\n        // forward x-axis, check whether collision on x-axis\n        selfPreAabb.x = selfAabb.x;\n        otherPreAabb.x = otherAabb.x;\n\n        if (cc.Intersection.rectRect(selfPreAabb, otherPreAabb)) {\n            if (this.dir === DIRECTION.LEFT && (selfPreAabb.xMax > otherPreAabb.xMax)) {\n                // this.node.x = otherPreAabb.xMax - this.node.parent.x;\n                this.node.x += (otherPreAabb.xMax - selfAabb.xMin + 1);\n                this.collisionX = -1;\n            } else if (this.dir === DIRECTION.RIGHT && (selfPreAabb.xMin < otherPreAabb.xMin)) {\n                // this.node.x = otherPreAabb.xMin - selfPreAabb.width - this.node.parent.x;\n                this.node.x -= (selfAabb.xMax - otherPreAabb.xMin + 1);\n                this.collisionX = 1;\n            }\n\n            this.dir = DIRECTION.IDLE;\n            other.touchingX = true;\n            // return;\n        }\n\n        // 3rd step\n        // forward y-axis, check whether collision on y-axis\n        selfPreAabb.y = selfAabb.y;\n        otherPreAabb.y = otherAabb.y;\n\n        if (cc.Intersection.rectRect(selfPreAabb, otherPreAabb)) {\n            if (this.dir === DIRECTION.DOWN && (selfPreAabb.yMax > otherPreAabb.yMax)) {\n                // this.node.y = otherPreAabb.yMax - this.node.parent.y;\n                this.node.y += (otherPreAabb.yMax - selfAabb.yMin + 1);\n                this.collisionY = -1;\n            } else if (this.dir === DIRECTION.UP && (selfPreAabb.yMin < otherPreAabb.yMin)) {\n                // this.node.y = otherPreAabb.yMin - selfPreAabb.height - this.node.parent.y;\n                this.node.y -= (selfAabb.yMax - otherPreAabb.yMin + 1);\n                this.collisionY = 1;\n            }\n            this.dir = DIRECTION.IDLE;\n            other.touchingY = true;\n        }\n        if (other.tag === 1 && this.role === PLAYER_ROLE.ATTACK) {\n            this.board.onCollide();\n        } \n        if (other.tag === 4) {\n            this.freeze();\n        }\n    }\n\n    onCollisionExit (other) {\n        this.touchingNumber--;\n        if (this.touchingNumber === 0) {\n            this.node.color = cc.Color.WHITE;\n        }\n\n        if (other.touchingX) {\n            this.collisionX = 0;\n            other.touchingX = false;\n        } else if (other.touchingY) {\n            other.touchingY = false;\n            this.collisionY = 0;\n        }\n    }\n\n    protected update(dt: number) {\n        if (this.state === PLAYER_STATE.NONE || this.dir === DIRECTION.IDLE || this.isAddArmor || this.isFreeze) return;\n        switch(this.dir) {\n            case DIRECTION.LEFT:\n                this.node.x -= this.isAddSpeed ? this.speed * dt * 4 : this.speed * dt;\n                break;\n            case DIRECTION.RIGHT:\n                this.node.x += this.isAddSpeed ? this.speed * dt * 4 : this.speed * dt;\n                break;\n            case DIRECTION.UP:\n                this.node.y += this.isAddSpeed ? this.speed * dt * 4 :this.speed * dt;\n                break;\n            case DIRECTION.DOWN:\n                this.node.y -= this.isAddSpeed ? this.speed * dt * 4 : this.speed * dt;\n                break;\n        }\n    }\n}"]}